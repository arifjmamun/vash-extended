var helpers = require('../../runtime').helpers;

helpers.DropDownList = function (selector, source) {
    var options = "";
    source.forEach(function (obj) {
        options += '<option value="' + obj.value + '">' + obj.text + '</option>';
    });
    this.buffer.push('<select id="' + selector + '" name="' + selector + '">' + options + '</select>');
};

helpers.TextBox = function (name, htmlAttributes = {}) {
    var attributes = ' ';
    if (Object.keys(htmlAttributes).length !== 0) {

        for (var attr in htmlAttributes) {
            if (htmlAttributes.hasOwnProperty(attr)) {
                attributes = attributes + attr + '="' + htmlAttributes[attr] + '" ';
            }
        }

        //check an attribute exists or not
        if (!htmlAttributes.hasOwnProperty('name')) {
            attributes = attributes + 'name="' + name + '" ';
        }
        if (!htmlAttributes.hasOwnProperty('id')) {
            attributes = attributes + 'id="' + name + '" ';
        }
    } else {
        attributes = attributes + 'name="' + name + '" ';
        attributes = attributes + 'id="' + name + '" ';
        attributes = attributes + 'type="text" ';
    }
    this.buffer.push('<input ' + attributes + '/>');
}

helpers.Label = function (name, text, htmlAttributes = {}) {
    var attributes = ' ';
    if (Object.keys(htmlAttributes).length !== 0) {

        for (var attr in htmlAttributes) {
            if (htmlAttributes.hasOwnProperty(attr)) {
                attributes = attributes + attr + '="' + htmlAttributes[attr] + '" ';
            }
        }

        //check an attribute exists or not
        if (!htmlAttributes.hasOwnProperty('for')) {
            attributes = attributes + 'for="' + name + '" ';
        }
    } else {
        attributes = attributes + 'for="' + name + '" ';
    }
    this.buffer.push('<label ' + attributes + '>' + text + '</label>');
}

helpers.ActionLink = function(text, htmlAttributes = {}, innerHtml = ""){
    var attributes = ' ';
    if (Object.keys(htmlAttributes).length !== 0) {

        for (var attr in htmlAttributes) {
            if (htmlAttributes.hasOwnProperty(attr)) {
                attributes = attributes + attr + '="' + htmlAttributes[attr] + '" ';
            }
        }

        //check an attribute exists or not
        if (!htmlAttributes.hasOwnProperty('href')) {
            attributes = attributes + 'href="#" ';
        }
    } else {
        attributes = attributes + 'for="' + name + '" ';
    }
    this.buffer.push('<a ' + attributes + '>' + (innerHtml !== "" ? innerHtml : text) + '</a>');
}

helpers.ValidationMessage = function(name, errors, htmlAttributes = {}){
    var errorBlock = '';
    var errorMessage = '';
    if(errors !== undefined && Object.keys(errors).length !== 0){
        if(errors.hasOwnProperty(name)){
            errorMessage = errors[name].msg;
            //errorBlock = '<span class="help-block">'+errors[name].msg+'</span>';
        }
        var attributes = ' ';
        if (Object.keys(htmlAttributes).length !== 0) {
    
            for (var attr in htmlAttributes) {
                if (htmlAttributes.hasOwnProperty(attr)) {
                    attributes = attributes + attr + '="' + htmlAttributes[attr] + '" ';
                }
            }
        }
        errorBlock = '<span '+attributes+'>'+errorMessage+'</span>';
    }
    if(errorBlock !== ''){
        this.buffer.push(errorBlock);
    }    
}